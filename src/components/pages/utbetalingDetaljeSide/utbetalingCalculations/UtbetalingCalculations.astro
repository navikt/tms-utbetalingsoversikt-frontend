---
import { Heading } from "@navikt/ds-react";
import DetaljeElement from "@src/components/utbetalingDetaljeElement/UtbetalingDetaljeElement";
import type { Trekk, UnderYtelseType, Utbetaling } from "@src/types/types";
import {
  isUtbetalingWithSats,
  satsDescription,
} from "@src/utils/client/utbetalingDetalje";
import style from "./UtbetalingCalculations.module.css";

interface Props {
  utbetaling: Utbetaling;
}

const { utbetaling } = Astro.props;

const hasTrekk = utbetaling?.trekk.length > 0;
const hasUnderytelser = utbetaling.underytelse.length > 0;
const showSats = isUtbetalingWithSats(utbetaling.ytelse);
const showBrutto = hasTrekk && hasUnderytelser;
const sumUtbetaltLabel = hasUnderytelser ? "Netto utbetalt" : "Sum";
---

{
  utbetaling.trekk ? (
    <div class={style.container}>
      <Heading level="2" size="xsmall" className={style.detaljerHeading}>
        Detaljer
      </Heading>
      <ul class={style.calculationList}>
        {hasUnderytelser &&
          utbetaling.underytelse.map((ytelse: UnderYtelseType) => {
            return (
              <DetaljeElement
                label={`${ytelse.beskrivelse} ${
                  showSats && ytelse.sats && ytelse.antall
                    ? satsDescription(ytelse)
                    : ''
                }`}
                beløp={ytelse.beløp}
              />
            );
          })}
        {showBrutto && (
          <DetaljeElement
            isSum={true}
            label={'Brutto'}
            beløp={utbetaling.bruttoUtbetalt}
            className="bruttoElement"
          />
        )}
        {hasTrekk &&
          utbetaling.trekk.map((trekk: Trekk) => (
            <DetaljeElement label={trekk.type} beløp={trekk.beløp} />
          ))}
        {
          <DetaljeElement
            isSum={true}
            label={sumUtbetaltLabel}
            beløp={utbetaling.nettoUtbetalt}
          />
        }
      </ul>
    </div>
  ) : null
}
