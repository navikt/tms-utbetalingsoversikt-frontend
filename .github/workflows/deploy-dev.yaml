name: Build and deploy

on:
  push:
    branches:
      - dev-*

permissions:
  contents: read
  id-token: write
  actions: read
  packages: write

jobs:
  build_and_deploy:
    name: Build, push and deploy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          node-version: 22


      - name: Determine what to do
        id: changed-files
        uses: nais/what-changed@main
        with:
          files: nais/dev-gcp/nais.yaml

      - name: Install dependencies
        if: steps.changed-files.outputs.changed != 'only-inputs'
        run: npm ci
        env:
          NODE_AUTH_TOKEN: ${{ secrets.READER_TOKEN }}

      - name: Build application
        if: steps.changed-files.outputs.changed != 'only-inputs'
        run: npm run build
        env:
          ASTRO_KEY: ${{ secrets.ASTRO_KEY }}

      - name: Upload to cdn
        if: steps.changed-files.outputs.changed != 'only-inputs'
        uses: nais/deploy/actions/cdn-upload/v2@master
        with:
          team: min-side
          source: ./dist/client/_astro
          destination: 'tms-utbetalingsoversikt-frontend'
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

      - name: Build and push image and SBOM to OCI registry
        if: steps.changed-files.outputs.changed != 'only-inputs'
        uses: nais/docker-build-push@v0
        id: docker-build-push
        with:
          team: min-side
          identity_provider: ${{ secrets.NAIS_WORKLOAD_IDENTITY_PROVIDER }}
          project_id: ${{ vars.NAIS_MANAGEMENT_PROJECT_ID }}

      - name: Deploy to Nais
        if: steps.changed-files.outputs.changed != 'only-inputs'
        uses: nais/deploy/actions/deploy@v2
        env:
          CLUSTER: dev-gcp
          RESOURCE: nais/dev-gcp/nais.yaml
          WORKLOAD_IMAGE: ${{ steps.docker-build-push.outputs.image }}
          TELEMETRY: ${{ steps.docker-build-push.outputs.telemetry }}